/*
 * @Description: 作用域
 */
//作用域： 一套根据标识符查找变量的规则，决定了代码块中变量的可见性
// 全局作用域、函数作用域、局部作用域
// 词法作用域：作用域的一种工作模型，还有一种是动态作用域，
//词法作用域就在写代码时就决定了的，是一种静态作用域
//作用域链： 执行代码时，会从当前的上下文进行查找变量，如果没有，就向上一级查找

//执行上下文: 代码在执行的时候，会产生一个执行环境，这个执行环境就是执行上下文
// 全局执行上下文、函数执行上下文、evel执行上下文
//执行上下文分为三个阶段： 1、创建阶段 2、执行阶段 3、销毁阶段
// 创建阶段： 1.绑定this 2.创建词法环境（全局环境、函数环境（包含argument）） 3.变量环境
// 词法环境和 变量环境， 词法环境存储函数声明和变量绑定（let、const） 变量环境（var）变量绑定

//var声明 变量提升 ， 函数声明 提升

console.log(a,"a");
var a

function a() {

}